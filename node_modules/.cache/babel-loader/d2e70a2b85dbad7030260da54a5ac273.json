{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function Stats({\n  teamId,\n  season\n}) {\n  const _useState = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season),\n        _useState2 = _slicedToArray(_useState, 1),\n        teamInfoUrl = _useState2[0]; // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n  // const [stats, setStats] = useState({});\n\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n\n      for (var i = 0; i < res.data.records.length; i++) {\n        for (var j = 0; j < res.data.records[i].teamRecords.length; j++) {\n          console.log(res.data.records[i].teamRecords[j].name);\n\n          if (res.data.records[i].teamRecords[j].id === teamId) {\n            t = res.data.records[i].teamRecords[j];\n          }\n        }\n      }\n\n      if (t) {\n        console.log(t);\n      }\n    });\n    return () => cancel();\n  }, [season, teamId]);\n  if (loading) return \"Loading...\";\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","axios","Stats","teamId","season","teamInfoUrl","loading","setLoading","cancel","get","cancelToken","CancelToken","c","then","res","console","log","data","records","t","i","length","j","teamRecords","name","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAf,EAAgC;AAAA,oBACvBL,QAAQ,CAAC,oFAAoFK,MAArF,CADe;AAAA;AAAA,QACtCC,WADsC,kBAE7C;AACA;AACA;;;AAJ6C,qBAKfN,QAAQ,CAAC,IAAD,CALO;AAAA;AAAA,QAKtCO,OALsC;AAAA,QAK7BC,UAL6B;;AAO7CP,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIC,MAAJ;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAUJ,WAAV,EAAuB;AACrBK,MAAAA,WAAW,EAAE,IAAIT,KAAK,CAACU,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AADQ,KAAvB,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACbP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACA,UAAIC,CAAJ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBG,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC9C,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACR,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCF,MAAjD,EAAyDC,CAAC,EAA1D,EAA6D;AAC3DP,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,EAAmCE,IAA/C;;AACA,cAAGV,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,EAAmCG,EAAnC,KAA0CtB,MAA7C,EAAoD;AAClDgB,YAAAA,CAAC,GAAGL,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,CAAJ;AAED;AACF;AACF;;AACD,UAAIH,CAAJ,EAAO;AAACJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AAAgB;AACzB,KAhBD;AAkBA,WAAO,MAAMX,MAAM,EAAnB;AACD,GAtBQ,EAsBN,CAACJ,MAAD,EAASD,MAAT,CAtBM,CAAT;AAwBA,MAAGG,OAAH,EAAY,OAAO,YAAP;AACZ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nexport default function Stats({teamId, season}){\n  const [teamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season);\n  // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n  // const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n      for(var i = 0; i < res.data.records.length; i++){\n        for(var j = 0; j<res.data.records[i].teamRecords.length; j++){\n          console.log(res.data.records[i].teamRecords[j].name);\n          if(res.data.records[i].teamRecords[j].id === teamId){\n            t = res.data.records[i].teamRecords[j];\n\n          }\n        }\n      }\n      if (t) {console.log(t);}\n    })\n\n    return () => cancel()\n  }, [season, teamId])\n\n  if(loading) return \"Loading...\";\n  return(\n    <div>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}