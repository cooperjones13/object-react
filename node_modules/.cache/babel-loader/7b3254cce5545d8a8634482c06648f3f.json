{"ast":null,"code":"var _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nvar SerialPort = require('serialport');\n\nvar serialPort = new SerialPort('/dev/ttyACM0', {\n  baudrate: 9600\n}); // Switches the port into \"flowing mode\"\n\nserialPort.on('data', function (data) {\n  console.log('Data:', data);\n}); // Read data that is available but keep the stream from entering //\"flowing mode\"\n\nserialPort.on('readable', function () {\n  console.log('Data:', port.read());\n});\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/index.js"],"names":["React","ReactDOM","App","SerialPort","require","serialPort","baudrate","on","data","console","log","port","read","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,IAAIC,UAAU,GAAG,IAAIF,UAAJ,CAAe,cAAf,EAA+B;AAC5CG,EAAAA,QAAQ,EAAE;AADkC,CAA/B,CAAjB,C,CAGA;;AACAD,UAAU,CAACE,EAAX,CAAc,MAAd,EAAsB,UAAUC,IAAV,EAAgB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACH,CAFD,E,CAEG;;AACHH,UAAU,CAACE,EAAX,CAAc,UAAd,EAA0B,YAAY;AAClCE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,IAAI,CAACC,IAAL,EAArB;AACH,CAFD;AAMAX,QAAQ,CAACY,MAAT,CACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EACWC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADX","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nvar SerialPort = require('serialport');\nvar serialPort = new SerialPort('/dev/ttyACM0', {\n    baudrate: 9600\n});\n// Switches the port into \"flowing mode\"\nserialPort.on('data', function (data) {\n    console.log('Data:', data);\n});// Read data that is available but keep the stream from entering //\"flowing mode\"\nserialPort.on('readable', function () {\n    console.log('Data:', port.read());\n});\n\n\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}