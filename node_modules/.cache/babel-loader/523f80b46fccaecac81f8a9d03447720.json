{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App() {\n  const _useState = useState(2019),\n        _useState2 = _slicedToArray(_useState, 2),\n        year = _useState2[0],\n        setYear = _useState2[1];\n\n  const _useState3 = useState(1869),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstYearOfPlay = _useState4[0],\n        setFirstYearOfPlay = _useState4[1];\n\n  const _useState5 = useState(-1),\n        _useState6 = _slicedToArray(_useState5, 2),\n        teamId = _useState6[0],\n        setTeamId = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        teamFound = _useState10[0],\n        setTeamFound = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        teamName = _useState12[0],\n        setTeamName = _useState12[1];\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        loading = _useState14[0],\n        setLoading = _useState14[1];\n\n  const _useState15 = useState({\n    \"accentColor\": \"#333366\",\n    \"darkColor\": \"#231F20\",\n    \"lightColor\": \"#C4CED4\"\n  }),\n        _useState16 = _slicedToArray(_useState15, 2),\n        theme = _useState16[0],\n        setTheme = _useState16[1]; // const [teamStats, setTeamStats] = useState({});\n\n\n  const _useState17 = useState('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year),\n        _useState18 = _slicedToArray(_useState17, 2),\n        teamInfoUrl = _useState18[0],\n        setTeamInfoUrl = _useState18[1]; // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  // const teamBackgroundColor = '#33006F';\n  // const teamTextColor = '#C4CED4';\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let cancelYear;\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout: 100\n      }).then(res => {\n        setYear(Math.round(mapRange(0, res.data.sliderValue, firstYearOfPlay, 2019)));\n        console.log(year);\n        setTeamId(res.data.id);\n        setTheme(res.data.theme);\n      }).catch(err => {\n        console.log(err.message);\n      });\n      return () => cancelYear();\n    }, 100);\n  }, []);\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout: 2000\n    }).then(res => {\n      setFirstYearOfPlay(res.data.teams[0].firstYearOfPlay);\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n      setTeamFound(true);\n    }).catch(err => {\n      if (teamId === -1) {\n        setTeamName(\"Loading...\");\n      }\n\n      setLoading(false);\n      setTeamFound(false);\n      setError(true); // console.log(year);\n      // console.log(err.message);\n      // return \"team not found\";\n    });\n    return () => cancel();\n  }, [year, teamId]); // if(loading) return \"loading...\"\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(TeamHeader, {\n    theme: theme,\n    teamName: teamName,\n    season: year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Stats, {\n    theme: theme,\n    error: error,\n    id: teamId,\n    year: year,\n    teamInfoUrl: \"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }));\n}\n\nfunction mapRange(value, a, b, c, d) {\n  // first map value from (a..b) to (0..1)\n  value = (value - a) / (b - a); // then map it from (0..1) to (c..d) and return it\n\n  return c + value * (d - c);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","TeamHeader","Stats","App","year","setYear","firstYearOfPlay","setFirstYearOfPlay","teamId","setTeamId","error","setError","teamFound","setTeamFound","teamName","setTeamName","loading","setLoading","theme","setTheme","teamInfoUrl","setTeamInfoUrl","interval","setInterval","cancelYear","get","cancelToken","CancelToken","c","timeout","then","res","Math","round","mapRange","data","sliderValue","console","log","id","catch","err","message","cancel","teams","name","value","a","b","d"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App(){\n  const [year, setYear] = useState(2019);\n  const [firstYearOfPlay, setFirstYearOfPlay] = useState(1869);\n  const [teamId, setTeamId] = useState(-1);\n  const [error, setError] = useState(false);\n  const [teamFound, setTeamFound] = useState(false);\n  const [teamName, setTeamName] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [theme, setTheme] = useState({\n    \"accentColor\": \"#333366\",\n    \"darkColor\": \"#231F20\",\n    \"lightColor\": \"#C4CED4\"\n  });\n  // const [teamStats, setTeamStats] = useState({});\n  const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  // const teamBackgroundColor = '#33006F';\n  // const teamTextColor = '#C4CED4';\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let cancelYear\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout:100\n      })\n      .then(res => {\n        setYear(Math.round(mapRange(0, res.data.sliderValue, firstYearOfPlay, 2019)));\n        console.log(year);\n        setTeamId(res.data.id);\n        setTheme(res.data.theme);\n      })\n      .catch(err =>{\n        console.log(err.message);\n      });\n      return () => cancelYear()\n    }, 100);\n  },[])\n\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n    let cancel\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout:2000\n    })\n    .then(res => {\n      setFirstYearOfPlay(res.data.teams[0].firstYearOfPlay);\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n      setTeamFound(true);\n    })\n    .catch(err =>{\n      if(teamId === -1){\n        setTeamName(\"Loading...\")\n      }\n\n      setLoading(false);\n      setTeamFound(false);\n      setError(true);\n      // console.log(year);\n      // console.log(err.message);\n      // return \"team not found\";\n    })\n\n    return () => cancel()\n  }, [year, teamId])\n\n  // if(loading) return \"loading...\"\n\n  return(\n    <div>\n      <TeamHeader theme={theme} teamName={teamName} season={year}/>\n      <Stats theme={theme} error={error} id={teamId} year={year} teamInfoUrl={\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year}/>\n    </div>\n  );\n\n}\n\nfunction mapRange (value, a, b, c, d) {\n    // first map value from (a..b) to (0..1)\n    value = (value - a) / (b - a);\n    // then map it from (0..1) to (c..d) and return it\n    return c + value * (d - c);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}