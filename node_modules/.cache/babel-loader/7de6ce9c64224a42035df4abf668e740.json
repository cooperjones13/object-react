{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App() {\n  const _useState = useState(2019),\n        _useState2 = _slicedToArray(_useState, 2),\n        year = _useState2[0],\n        setYear = _useState2[1]; // const [teamId, setTeamId] = useState(114);\n\n\n  const teamId = 115;\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teamFound = _useState4[0],\n        setTeamFound = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        teamName = _useState6[0],\n        setTeamName = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1]; // const [teamStats, setTeamStats] = useState({});\n\n\n  const _useState9 = useState('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year),\n        _useState10 = _slicedToArray(_useState9, 2),\n        teamInfoUrl = _useState10[0],\n        setTeamInfoUrl = _useState10[1]; // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n\n\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n  axios.get(\"http://localhost:5000/api/data\", {\n    cancelToken: new axios.CancelToken(c => cancel = c),\n    timeout: 2000\n  }).then(res => {\n    setTeamName(res.data.teams[0].name);\n    setLoading(false);\n    setTeamFound(true);\n  }).catch(err => {\n    setLoading(false);\n    setTeamFound(false);\n    console.log(err.message);\n  });\n  return () => cancel();\n  useEffect(() => {\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout: 2000\n    }).then(res => {\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n      setTeamFound(true);\n    }).catch(err => {\n      setLoading(false);\n      setTeamFound(false);\n      console.log(err.message);\n    });\n    return () => cancel();\n  }, [year, teamId]);\n  if (loading) return \"Loading...\";\n\n  if (teamFound) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TeamHeader, {\n      teamName: teamName,\n      season: year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Stats, {\n      teamId: teamId,\n      season: year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"team-not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"PASTIME\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" place a baseball on the sensor and use the slider to explore the history of america's pastime\"));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","TeamHeader","Stats","App","year","setYear","teamId","teamFound","setTeamFound","teamName","setTeamName","loading","setLoading","teamInfoUrl","setTeamInfoUrl","teamBackgroundColor","teamTextColor","get","cancelToken","CancelToken","c","cancel","timeout","then","res","data","teams","name","catch","err","console","log","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAc;AAAA,oBACYL,QAAQ,CAAC,IAAD,CADpB;AAAA;AAAA,QACLM,IADK;AAAA,QACCC,OADD,kBAEZ;;;AACA,QAAMC,MAAM,GAAG,GAAf;;AAHY,qBAIsBR,QAAQ,CAAC,KAAD,CAJ9B;AAAA;AAAA,QAILS,SAJK;AAAA,QAIMC,YAJN;;AAAA,qBAKoBV,QAAQ,EAL5B;AAAA;AAAA,QAKLW,QALK;AAAA,QAKKC,WALL;;AAAA,qBAMkBZ,QAAQ,CAAC,IAAD,CAN1B;AAAA;AAAA,QAMLa,OANK;AAAA,QAMIC,UANJ,kBAOZ;;;AAPY,qBAQ0Bd,QAAQ,CAAC,iDAAgDQ,MAAhD,GAAwD,UAAxD,GAAoEF,IAArE,CARlC;AAAA;AAAA,QAQLS,WARK;AAAA,QAQQC,cARR,mBASZ;AACA;;;AACA,QAAMC,mBAAmB,GAAG,SAA5B;AACA,QAAMC,aAAa,GAAG,SAAtB;AAEAhB,EAAAA,KAAK,CAACiB,GAAN,CAAU,gCAAV,EAA4C;AAC1CC,IAAAA,WAAW,EAAE,IAAIlB,KAAK,CAACmB,WAAV,CAAsBC,CAAC,IAAIC,MAAM,GAAGD,CAApC,CAD6B;AAE1CE,IAAAA,OAAO,EAAC;AAFkC,GAA5C,EAICC,IAJD,CAIMC,GAAG,IAAI;AACXd,IAAAA,WAAW,CAACc,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACAf,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GARD,EASCoB,KATD,CASOC,GAAG,IAAG;AACXjB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,GAbD;AAeA,SAAO,MAAMX,MAAM,EAAnB;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,IAAAA,cAAc,CAAC,iDAAgDR,MAAhD,GAAwD,UAAxD,GAAoEF,IAArE,CAAd;AACA,QAAIiB,MAAJ;AACArB,IAAAA,KAAK,CAACiB,GAAN,CAAUJ,WAAV,EAAuB;AACrBK,MAAAA,WAAW,EAAE,IAAIlB,KAAK,CAACmB,WAAV,CAAsBC,CAAC,IAAIC,MAAM,GAAGD,CAApC,CADQ;AAErBE,MAAAA,OAAO,EAAC;AAFa,KAAvB,EAICC,IAJD,CAIMC,GAAG,IAAI;AACXd,MAAAA,WAAW,CAACc,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KARD,EASCoB,KATD,CASOC,GAAG,IAAG;AACXjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACD,KAbD;AAeA,WAAO,MAAMX,MAAM,EAAnB;AACD,GArBQ,EAqBN,CAACjB,IAAD,EAAOE,MAAP,CArBM,CAAT;AAuBA,MAAGK,OAAH,EAAY,OAAO,YAAP;;AACZ,MAAGJ,SAAH,EAAa;AACX,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAEE,QAAtB;AAAgC,MAAA,MAAM,EAAEL,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEE,MAAf;AAAuB,MAAA,MAAM,EAAEF,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,GAPD,MAOM;AACJ,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wGAFF,CADF;AAMD;AAEF;;AAED,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App(){\n  const [year, setYear] = useState(2019);\n  // const [teamId, setTeamId] = useState(114);\n  const teamId = 115;\n  const [teamFound, setTeamFound] = useState(false);\n  const [teamName, setTeamName] = useState();\n  const [loading, setLoading] = useState(true);\n  // const [teamStats, setTeamStats] = useState({});\n  const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n\n  axios.get(\"http://localhost:5000/api/data\", {\n    cancelToken: new axios.CancelToken(c => cancel = c),\n    timeout:2000\n  })\n  .then(res => {\n    setTeamName(res.data.teams[0].name);\n    setLoading(false);\n    setTeamFound(true);\n  })\n  .catch(err =>{\n    setLoading(false);\n    setTeamFound(false);\n    console.log(err.message);\n  })\n\n  return () => cancel()\n\n  useEffect(() => {\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n    let cancel\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout:2000\n    })\n    .then(res => {\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n      setTeamFound(true);\n    })\n    .catch(err =>{\n      setLoading(false);\n      setTeamFound(false);\n      console.log(err.message);\n    })\n\n    return () => cancel()\n  }, [year, teamId])\n\n  if(loading) return \"Loading...\";\n  if(teamFound){\n    return(\n      <div>\n        <TeamHeader teamName={teamName} season={year}/>\n        <Stats teamId={teamId} season={year}/>\n      </div>\n    );\n  } else{\n    return(\n      <div className=\"team-not-found\">\n        <h1>PASTIME</h1>\n        <p> place a baseball on the sensor and use the slider to explore the history of america's pastime</p>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}