{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport SeasonRecord from './SeasonRecord';\nimport axios from 'axios';\nexport default function Stats({\n  id,\n  year,\n  teamInfoUrl\n}) {\n  // const [teamInfoUrl, setTeamInfoUrl] = useState(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year);\n  // console.log(id +\" \" + year);\n  const _useState = useState({\n    \"wins\": \"\",\n    \"losses\": \"\",\n    \"winningPercentage\": \"\",\n    \"leagueGamesBack\": \"\",\n    \"records\": {\n      \"splitRecords\": [{\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }]\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        stats = _useState2[0],\n        setStats = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    setLoading(true);\n    console.log(teamInfoUrl);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false); // console.log(teamInfoUrl);\n\n      console.log(res.data.records);\n\n      for (var i = 0; i < res.data.records.length; i++) {\n        for (var j = 0; j < res.data.records[i].teamRecords.length; j++) {\n          if (res.data.records[i].teamRecords[j].team.id === id) {\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    }).catch(err => {\n      setLoading(false); // console.log(err.message);\n\n      return err.message;\n    });\n    return () => cancel();\n  }, []); // console.log(stats);\n  // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  if (loading) return 0;\n  return React.createElement(\"div\", {\n    className: \"stats-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(SeasonRecord, {\n    stats: stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","StatBlock","SeasonRecord","axios","Stats","id","year","teamInfoUrl","stats","setStats","loading","setLoading","console","log","cancel","get","cancelToken","CancelToken","c","then","res","data","records","i","length","j","teamRecords","team","catch","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA;AAAX,CAAf,EAAuC;AACpD;AACA;AAFoD,oBAG1BR,QAAQ,CAAC;AACjC,YAAO,EAD0B;AAEjC,cAAS,EAFwB;AAGjC,yBAAoB,EAHa;AAIjC,uBAAkB,EAJe;AAKjC,eAAU;AACR,sBAAe,CAAC;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAD,EAAyB;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAzB,EAAiD;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAjD,EAAyE;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAzE,EAAiG;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAjG;AADP;AALuB,GAAD,CAHkB;AAAA;AAAA,QAG7CS,KAH6C;AAAA,QAGtCC,QAHsC;;AAAA,qBAYtBV,QAAQ,CAAC,IAAD,CAZc;AAAA;AAAA,QAY7CW,OAZ6C;AAAA,QAYpCC,UAZoC;;AAcpDX,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AACA,QAAIO,MAAJ;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAUR,WAAV,EAAuB;AACrBS,MAAAA,WAAW,EAAE,IAAIb,KAAK,CAACc,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AADQ,KAAvB,EAGCC,IAHD,CAGMC,GAAG,IAAI;AACXT,MAAAA,UAAU,CAAC,KAAD,CAAV,CADW,CAEX;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,IAAJ,CAASC,OAArB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBE,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC9C,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACL,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,CAAjB,EAAoBG,WAApB,CAAgCF,MAAjD,EAAyDC,CAAC,EAA1D,EAA6D;AAC3D,cAAGL,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,EAAmCE,IAAnC,CAAwCtB,EAAxC,KAA+CA,EAAlD,EAAqD;AACnDI,YAAAA,QAAQ,CAACW,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,CAAD,CAAR;AACD;AACF;AACF;AACF,KAdD,EAeCG,KAfD,CAeOC,GAAG,IAAG;AACXlB,MAAAA,UAAU,CAAC,KAAD,CAAV,CADW,CAEX;;AACA,aAAOkB,GAAG,CAACC,OAAX;AACD,KAnBD;AAoBA,WAAO,MAAMhB,MAAM,EAAnB;AACD,GAzBQ,EAyBN,EAzBM,CAAT,CAdoD,CAwCpD;AACA;;AACA,MAAGJ,OAAH,EAAY,OAAO,CAAP;AACZ,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport SeasonRecord from './SeasonRecord';\nimport axios from 'axios';\n\nexport default function Stats({id, year, teamInfoUrl}){\n  // const [teamInfoUrl, setTeamInfoUrl] = useState(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year);\n  // console.log(id +\" \" + year);\n  const [stats, setStats] = useState({\n    \"wins\":\"\",\n    \"losses\":\"\",\n    \"winningPercentage\":\"\",\n    \"leagueGamesBack\":\"\",\n    \"records\":{\n      \"splitRecords\":[{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"}]\n    }\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    console.log(teamInfoUrl);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      setLoading(false);\n      // console.log(teamInfoUrl);\n      console.log(res.data.records);\n      for(var i = 0; i < res.data.records.length; i++){\n        for(var j = 0; j<res.data.records[i].teamRecords.length; j++){\n          if(res.data.records[i].teamRecords[j].team.id === id){\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    })\n    .catch(err =>{\n      setLoading(false);\n      // console.log(err.message);\n      return err.message;\n    })\n    return () => cancel()\n  }, [])\n  // console.log(stats);\n  // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n  if(loading) return 0;\n  return(\n    <div className=\"stats-container\">\n      <SeasonRecord stats={stats}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}