{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\nexport default function Stats({\n  teamId,\n  season\n}) {\n  const _useState = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season),\n        _useState2 = _slicedToArray(_useState, 1),\n        teamInfoUrl = _useState2[0]; // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n\n\n  const _useState3 = useState([false, \"\"]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stats = _useState6[0],\n        setStats = _useState6[1];\n\n  const _useState7 = useState(true),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n\n      for (var i = 0; i < res.data.records.length; i++) {\n        for (var j = 0; j < res.data.records[i].teamRecords.length; j++) {\n          if (res.data.records[i].teamRecords[j].team.id === teamId) {\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    }).catch(err => {\n      setLoading(false);\n      console.log(err.message);\n    });\n    return () => cancel();\n  }, [season, teamId]);\n  if (loading) return \"Loading...\";\n  const displayedStats_keys = [\"gamesPlayed\", \"wins\", \"losses\", \"winningPercentage\", \"runsAllowed\", \"runsScored\", \"divisionRank\", \"leagueRank\", \"sportRank\"];\n  return React.createElement(\"div\", {\n    className: \"stats-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, displayedStats_keys.map(s => React.createElement(StatBlock, {\n    key: s,\n    title: s,\n    statistic: stats[s],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","StatBlock","axios","Stats","teamId","season","teamInfoUrl","error","setError","stats","setStats","loading","setLoading","cancel","get","cancelToken","CancelToken","c","then","res","console","log","data","records","t","i","length","j","teamRecords","team","id","catch","err","message","displayedStats_keys","map","s"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAf,EAAgC;AAAA,oBACvBN,QAAQ,CAAC,oFAAoFM,MAArF,CADe;AAAA;AAAA,QACtCC,WADsC,kBAE7C;AACA;;;AAH6C,qBAInBP,QAAQ,CAAC,CAAC,KAAD,EAAQ,EAAR,CAAD,CAJW;AAAA;AAAA,QAItCQ,KAJsC;AAAA,QAI/BC,QAJ+B;;AAAA,qBAKnBT,QAAQ,CAAC,EAAD,CALW;AAAA;AAAA,QAKtCU,KALsC;AAAA,QAK/BC,QAL+B;;AAAA,qBAMfX,QAAQ,CAAC,IAAD,CANO;AAAA;AAAA,QAMtCY,OANsC;AAAA,QAM7BC,UAN6B;;AAQ7CZ,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIC,MAAJ;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAUR,WAAV,EAAuB;AACrBS,MAAAA,WAAW,EAAE,IAAIb,KAAK,CAACc,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AADQ,KAAvB,EAGCC,IAHD,CAGMC,GAAG,IAAI;AACXP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACA,UAAIC,CAAJ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBG,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC9C,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACR,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCF,MAAjD,EAAyDC,CAAC,EAA1D,EAA6D;AAC3D,cAAGR,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,EAAmCE,IAAnC,CAAwCC,EAAxC,KAA+C1B,MAAlD,EAAyD;AACvDM,YAAAA,QAAQ,CAACS,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,CAAD,CAAR;AACD;AACF;AACF;AACF,KAdD,EAeCI,KAfD,CAeOC,GAAG,IAAG;AACXpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,OAAhB;AACD,KAlBD;AAoBA,WAAO,MAAMpB,MAAM,EAAnB;AACD,GAxBQ,EAwBN,CAACR,MAAD,EAASD,MAAT,CAxBM,CAAT;AA0BA,MAAGO,OAAH,EAAY,OAAO,YAAP;AAEZ,QAAMuB,mBAAmB,GAAG,CAC1B,aAD0B,EAE1B,MAF0B,EAG1B,QAH0B,EAI1B,mBAJ0B,EAK1B,aAL0B,EAM1B,YAN0B,EAO1B,cAP0B,EAQ1B,YAR0B,EAS1B,WAT0B,CAA5B;AAWA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,mBAAmB,CAACC,GAApB,CAAwBC,CAAC,IACxB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAhB;AAAmB,IAAA,KAAK,EAAEA,CAA1B;AAA6B,IAAA,SAAS,EAAE3B,KAAK,CAAC2B,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADF;AAOD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\n\nexport default function Stats({teamId, season}){\n  const [teamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season);\n  // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n  const [error, setError] = useState([false, \"\"]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n      for(var i = 0; i < res.data.records.length; i++){\n        for(var j = 0; j<res.data.records[i].teamRecords.length; j++){\n          if(res.data.records[i].teamRecords[j].team.id === teamId){\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    })\n    .catch(err =>{\n      setLoading(false);\n      console.log(err.message);\n    })\n\n    return () => cancel()\n  }, [season, teamId])\n\n  if(loading) return \"Loading...\";\n\n  const displayedStats_keys = [\n    \"gamesPlayed\",\n    \"wins\",\n    \"losses\",\n    \"winningPercentage\",\n    \"runsAllowed\",\n    \"runsScored\",\n    \"divisionRank\",\n    \"leagueRank\",\n    \"sportRank\"]\n\n  return(\n    <div className=\"stats-container\">\n    {displayedStats_keys.map(s => (\n      <StatBlock key={s} title={s} statistic={stats[s]}/>\n    ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}