{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // import TeamHeader from './TeamHeader';\n\nimport Stats from './Stats';\n\nfunction App() {\n  // const [year, setYear] = useState(2019);\n  const year = 2019; // const [teamId, setTeamId] = useState(114);\n\n  const teamId = 11000;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        teamName = _useState2[0],\n        setTeamName = _useState2[1];\n\n  const _useState3 = useState([false, \"\"]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        error = _useState4[0],\n        setError = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1]; // const [teamStats, setTeamStats] = useState({});\n\n\n  const _useState7 = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + year),\n        _useState8 = _slicedToArray(_useState7, 2),\n        seasonStandingsUrl = _useState8[0],\n        setSeasonStandingsUrl = _useState8[1]; // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n\n\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios.get('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout: 2000\n    }).then(res => {\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err.message);\n      setError([true, err.message]);\n    });\n    return () => cancel();\n  }, [year, teamId]);\n  if (loading) return \"Loading...\";\n  if (error) return \"Error: \" + error[1];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Stats, {\n    teamId: teamId,\n    season: year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n} //<TeamHeader teamName={teamName} season={year}/>\n\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","Stats","App","year","teamId","teamName","setTeamName","error","setError","loading","setLoading","seasonStandingsUrl","setSeasonStandingsUrl","teamBackgroundColor","teamTextColor","cancel","get","cancelToken","CancelToken","c","timeout","then","res","data","teams","name","catch","err","console","log","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,GAAT,GAAc;AACZ;AACA,QAAMC,IAAI,GAAG,IAAb,CAFY,CAGZ;;AACA,QAAMC,MAAM,GAAG,KAAf;;AAJY,oBAKoBN,QAAQ,EAL5B;AAAA;AAAA,QAKLO,QALK;AAAA,QAKKC,WALL;;AAAA,qBAMcR,QAAQ,CAAC,CAAC,KAAD,EAAQ,EAAR,CAAD,CANtB;AAAA;AAAA,QAMLS,KANK;AAAA,QAMEC,QANF;;AAAA,qBAOkBV,QAAQ,CAAC,IAAD,CAP1B;AAAA;AAAA,QAOLW,OAPK;AAAA,QAOIC,UAPJ,kBAQZ;;;AARY,qBASwCZ,QAAQ,CAAC,oFAAoFK,IAArF,CAThD;AAAA;AAAA,QASLQ,kBATK;AAAA,QASeC,qBATf,kBAUZ;AACA;;;AACA,QAAMC,mBAAmB,GAAG,SAA5B;AACA,QAAMC,aAAa,GAAG,SAAtB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIK,MAAJ;AACAf,IAAAA,KAAK,CAACgB,GAAN,CAAU,iDAAgDZ,MAAhD,GAAwD,UAAxD,GAAoED,IAA9E,EAAoF;AAClFc,MAAAA,WAAW,EAAE,IAAIjB,KAAK,CAACkB,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC,CADqE;AAElFC,MAAAA,OAAO,EAAC;AAF0E,KAApF,EAICC,IAJD,CAIMC,GAAG,IAAI;AACXhB,MAAAA,WAAW,CAACgB,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAPD,EAQCgB,KARD,CAQOC,GAAG,IAAG;AACXjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACAtB,MAAAA,QAAQ,CAAC,CAAC,IAAD,EAAMmB,GAAG,CAACG,OAAV,CAAD,CAAR;AACD,KAZD;AAcA,WAAO,MAAMf,MAAM,EAAnB;AACD,GAlBQ,EAkBN,CAACZ,IAAD,EAAOC,MAAP,CAlBM,CAAT;AAoBA,MAAGK,OAAH,EAAY,OAAO,YAAP;AACZ,MAAGF,KAAH,EAAU,OAAO,YAAWA,KAAK,CAAC,CAAD,CAAvB;AACV,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEH,MAAf;AAAuB,IAAA,MAAM,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,C,CACD;;;AAEA,eAAeD,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n// import TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App(){\n  // const [year, setYear] = useState(2019);\n  const year = 2019;\n  // const [teamId, setTeamId] = useState(114);\n  const teamId = 11000;\n  const [teamName, setTeamName] = useState();\n  const [error, setError] = useState([false, \"\"]);\n  const [loading, setLoading] = useState(true);\n  // const [teamStats, setTeamStats] = useState({});\n  const [seasonStandingsUrl, setSeasonStandingsUrl] = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel\n    axios.get('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout:2000\n    })\n    .then(res => {\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n    })\n    .catch(err =>{\n      setLoading(false);\n      console.log(err.message);\n      setError([true,err.message]);\n    })\n\n    return () => cancel()\n  }, [year, teamId])\n\n  if(loading) return \"Loading...\";\n  if(error) return \"Error: \"+ error[1];\n  return(\n    <div>\n      <Stats teamId={teamId} season={year}/>\n    </div>\n  );\n}\n//<TeamHeader teamName={teamName} season={year}/>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}