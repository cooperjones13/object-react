{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\n\nfunction App() {\n  // const [year, setYear] = useState(2019);\n  const year = 2019; // const [teamId, setTeamId] = useState(114);\n\n  const teamId = 114;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        teamName = _useState2[0],\n        setTeamName = _useState2[1]; // const [teamStats, setTeamStats] = useState({});\n  // const [seasonStandingsUrl, setSeasonStandingsUrl] = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n\n\n  useEffect(() => {\n    let cancel;\n    axios.get('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setTeamName(res.data.teams[0].name); // setLoading(false)\n      // setNextPageUrl(res.data.next)\n      // setPrevPageUrl(res.data.previous)\n      // setPokemon(res.data.results.map(p => p.name))\n    });\n    return () => cancel();\n  }, [year, teamId]);\n  return React.createElement(TeamHeader, {\n    teamId: teamName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","TeamHeader","App","year","teamId","teamName","setTeamName","cancel","get","cancelToken","CancelToken","c","then","res","data","teams","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,GAAT,GAAc;AACZ;AACA,QAAMC,IAAI,GAAG,IAAb,CAFY,CAGZ;;AACA,QAAMC,MAAM,GAAG,GAAf;;AAJY,oBAKoBN,QAAQ,EAL5B;AAAA;AAAA,QAKLO,QALK;AAAA,QAKKC,WALL,kBAMZ;AACA;AACA;AACA;;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAJ;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,iDAAgDJ,MAAhD,GAAwD,UAAxD,GAAoED,IAA9E,EAAoF;AAClFM,MAAAA,WAAW,EAAE,IAAIT,KAAK,CAACU,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AADqE,KAApF,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACbP,MAAAA,WAAW,CAACO,GAAG,CAACC,IAAJ,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAAnB,CAAX,CADa,CAGb;AACA;AACA;AACA;AACD,KATD;AAWA,WAAO,MAAMT,MAAM,EAAnB;AACD,GAdQ,EAcN,CAACJ,IAAD,EAAOC,MAAP,CAdM,CAAT;AAgBA,SACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\n\nfunction App(){\n  // const [year, setYear] = useState(2019);\n  const year = 2019;\n  // const [teamId, setTeamId] = useState(114);\n  const teamId = 114;\n  const [teamName, setTeamName] = useState();\n  // const [teamStats, setTeamStats] = useState({});\n  // const [seasonStandingsUrl, setSeasonStandingsUrl] = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n\n  useEffect(() => {\n    let cancel\n    axios.get('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setTeamName(res.data.teams[0].name);\n\n      // setLoading(false)\n      // setNextPageUrl(res.data.next)\n      // setPrevPageUrl(res.data.previous)\n      // setPokemon(res.data.results.map(p => p.name))\n    })\n\n    return () => cancel()\n  }, [year, teamId])\n\n  return(\n    <TeamHeader teamId={teamName}/>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}