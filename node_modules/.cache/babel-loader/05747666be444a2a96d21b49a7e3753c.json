{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App() {\n  const _useState = useState(2019),\n        _useState2 = _slicedToArray(_useState, 2),\n        year = _useState2[0],\n        setYear = _useState2[1];\n\n  const _useState3 = useState(115),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teamId = _useState4[0],\n        setTeamId = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        teamFound = _useState8[0],\n        setTeamFound = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        teamName = _useState10[0],\n        setTeamName = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1]; // const [teamStats, setTeamStats] = useState({});\n\n\n  const _useState13 = useState('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year),\n        _useState14 = _slicedToArray(_useState13, 2),\n        teamInfoUrl = _useState14[0],\n        setTeamInfoUrl = _useState14[1]; // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n\n\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let cancelYear;\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout: 1000\n      }).then(res => {\n        setYear(res.data.year);\n        setTeamId(res.data.id);\n      }).catch(err => {\n        console.log(err.message);\n      });\n      return () => cancelYear();\n      console.log(\"yeee\");\n    }, 1000);\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      setError(false);\n      setLoading(true);\n      setTeamFound(false);\n      setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year);\n      let cancel;\n      axios.get(teamInfoUrl, {\n        cancelToken: new axios.CancelToken(c => cancel = c),\n        timeout: 2000\n      }).then(res => {\n        setTeamName(res.data.teams[0].name);\n        setLoading(false);\n        setTeamFound(true);\n      }).catch(err => {\n        setLoading(false);\n        setTeamFound(false);\n        setError(true);\n        console.log(year);\n        console.log(err.message); // return \"team not found\";\n      });\n      return () => cancel();\n    }, 100);\n  }, [year, teamId]); // if(loading) return \"loading...\"\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(TeamHeader, {\n    teamName: teamName,\n    season: year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Stats, {\n    error: error,\n    id: teamId,\n    year: year,\n    teamInfoUrl: \"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","TeamHeader","Stats","App","year","setYear","teamId","setTeamId","error","setError","teamFound","setTeamFound","teamName","setTeamName","loading","setLoading","teamInfoUrl","setTeamInfoUrl","teamBackgroundColor","teamTextColor","interval","setInterval","cancelYear","get","cancelToken","CancelToken","c","timeout","then","res","data","id","catch","err","console","log","message","setTimeout","cancel","teams","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App(){\n  const [year, setYear] = useState(2019);\n  const [teamId, setTeamId] = useState(115);\n  const [error, setError] = useState(false);\n  const [teamFound, setTeamFound] = useState(false);\n  const [teamName, setTeamName] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  // const [teamStats, setTeamStats] = useState({});\n  const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let cancelYear\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout:1000\n      })\n      .then(res => {\n        setYear(res.data.year);\n        setTeamId(res.data.id);\n      })\n      .catch(err =>{\n        console.log(err.message);\n      });\n      return () => cancelYear()\n      console.log(\"yeee\");\n    }, 1000);\n  },[])\n\n  useEffect(() => {\n    setTimeout(()=>{\n      setError(false);\n      setLoading(true);\n      setTeamFound(false);\n      setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n      let cancel\n      axios.get(teamInfoUrl, {\n        cancelToken: new axios.CancelToken(c => cancel = c),\n        timeout:2000\n      })\n      .then(res => {\n        setTeamName(res.data.teams[0].name);\n        setLoading(false);\n        setTeamFound(true);\n      })\n      .catch(err =>{\n        setLoading(false);\n        setTeamFound(false);\n        setError(true);\n        console.log(year);\n        console.log(err.message);\n        // return \"team not found\";\n      })\n\n      return () => cancel()\n    }, 100);\n  }, [year, teamId])\n\n  // if(loading) return \"loading...\"\n\n  return(\n    <div>\n      <TeamHeader teamName={teamName} season={year}/>\n      <Stats error={error} id={teamId} year={year} teamInfoUrl={\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year}/>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}