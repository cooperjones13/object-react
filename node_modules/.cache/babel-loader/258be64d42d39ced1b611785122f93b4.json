{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App() {\n  const _useState = useState(2019),\n        _useState2 = _slicedToArray(_useState, 2),\n        year = _useState2[0],\n        setYear = _useState2[1];\n\n  const _useState3 = useState(1869),\n        _useState4 = _slicedToArray(_useState3, 2),\n        firstYearOfPlay = _useState4[0],\n        setFirstYearOfPlay = _useState4[1];\n\n  const _useState5 = useState(115),\n        _useState6 = _slicedToArray(_useState5, 2),\n        teamId = _useState6[0],\n        setTeamId = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        error = _useState8[0],\n        setError = _useState8[1];\n\n  const _useState9 = useState({\n    \"venue\": {\n      \"name\": \"-\"\n    },\n    \"locationName\": \"-\",\n    \"firstYearOfPlay\": \"1890\",\n    \"division\": {\n      \"name\": \"-\"\n    },\n    \"fileCode\": \"col\",\n    \"league\": {\n      \"name\": \"-\"\n    }\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        teamInfo = _useState10[0],\n        setTeamInfo = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        teamName = _useState12[0],\n        setTeamName = _useState12[1];\n\n  const _useState13 = useState(\"-\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        division = _useState14[0],\n        setDivision = _useState14[1];\n\n  const _useState15 = useState({\n    \"accentColor\": \"#aaa\",\n    \"darkColor\": \"#000\",\n    \"lightColor\": \"#fff\"\n  }),\n        _useState16 = _slicedToArray(_useState15, 2),\n        theme = _useState16[0],\n        setTheme = _useState16[1]; // const [teamStats, setTeamStats] = useState({});\n\n\n  const _useState17 = useState('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year),\n        _useState18 = _slicedToArray(_useState17, 2),\n        teamInfoUrl = _useState18[0],\n        setTeamInfoUrl = _useState18[1]; // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  // const teamBackgroundColor = '#33006F';\n  // const teamTextColor = '#C4CED4';\n\n\n  useEffect(() => {\n    setInterval(() => {\n      let cancelYear;\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout: 100\n      }).then(res => {\n        setYear(Math.round(mapRange(res.data.sliderValue, 0, 1023, 1869, 2019)));\n        setTeamId(res.data.id);\n        setTheme(res.data.theme);\n      }).catch(err => {// console.log(err.message);\n      });\n      return () => cancelYear();\n    }, 1000);\n  }, [firstYearOfPlay]);\n  useEffect(() => {\n    // console.log(year);\n    setError(false); // setLoading(true);\n    // setTeamFound(false);\n\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout: 2000\n    }).then(res => {\n      setFirstYearOfPlay(res.data.teams[0].firstYearOfPlay);\n      setTeamName(res.data.teams[0].name);\n      setDivision(res.data.teams[0].division.name); // setLoading(false);\n      // setTeamFound(true);\n\n      setTeamInfo(res.data.teams[0]);\n    }).catch(err => {\n      if (teamId === -1) {\n        setTeamName(\"Loading...\");\n      } // setLoading(false);\n      // setTeamFound(false);\n\n\n      setError(true); // console.log(year);\n      // console.log(err.message);\n      // return \"team not found\";\n    });\n    return () => cancel();\n  }, [year, teamId, teamInfoUrl]); // if(loading) return \"loading...\"\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TeamHeader, {\n    theme: theme,\n    teamName: teamName,\n    teamId: teamId,\n    season: year,\n    teamInfo: teamInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Stats, {\n    division: division,\n    teamInfo: teamInfo,\n    theme: theme,\n    error: error,\n    id: teamId,\n    year: year,\n    teamStatsUrl: \"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n}\n\nfunction mapRange(value, a, b, c, d) {\n  // first map value from (a..b) to (0..1)\n  value = (value - a) / (b - a); // then map it from (0..1) to (c..d) and return it\n\n  return c + value * (d - c);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","TeamHeader","Stats","App","year","setYear","firstYearOfPlay","setFirstYearOfPlay","teamId","setTeamId","error","setError","teamInfo","setTeamInfo","teamName","setTeamName","division","setDivision","theme","setTheme","teamInfoUrl","setTeamInfoUrl","setInterval","cancelYear","get","cancelToken","CancelToken","c","timeout","then","res","Math","round","mapRange","data","sliderValue","id","catch","err","cancel","teams","name","value","a","b","d"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App(){\n  const [year, setYear] = useState(2019);\n  const [firstYearOfPlay, setFirstYearOfPlay] = useState(1869);\n  const [teamId, setTeamId] = useState(115);\n  const [error, setError] = useState(false);\n  const [teamInfo, setTeamInfo] = useState({\n    \"venue\": {\n      \"name\": \"-\"\n      },\n    \"locationName\": \"-\",\n    \"firstYearOfPlay\": \"1890\",\n    \"division\":{\n      \"name\": \"-\"\n    },\n    \"fileCode\":\"col\",\n    \"league\":{\n      \"name\": \"-\"\n    }\n  });\n  const [teamName, setTeamName] = useState(\"\");\n  const [division, setDivision] = useState(\"-\")\n  const [theme, setTheme] = useState({\n    \"accentColor\": \"#aaa\",\n    \"darkColor\": \"#000\",\n    \"lightColor\": \"#fff\"\n  });\n  // const [teamStats, setTeamStats] = useState({});\n  const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  // const teamBackgroundColor = '#33006F';\n  // const teamTextColor = '#C4CED4';\n\n  useEffect(() => {\n    setInterval(() => {\n      let cancelYear\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout:100\n      })\n      .then(res => {\n        setYear(Math.round(mapRange(res.data.sliderValue, 0, 1023, 1869, 2019)));\n        setTeamId(res.data.id);\n        setTheme(res.data.theme);\n      })\n      .catch(err =>{\n        // console.log(err.message);\n      });\n      return () => cancelYear()\n    }, 1000);\n  },[firstYearOfPlay])\n\n  useEffect(() => {\n    // console.log(year);\n    setError(false);\n    // setLoading(true);\n    // setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n    let cancel\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout:2000\n    })\n    .then(res => {\n      setFirstYearOfPlay(res.data.teams[0].firstYearOfPlay);\n      setTeamName(res.data.teams[0].name);\n      setDivision(res.data.teams[0].division.name);\n      // setLoading(false);\n      // setTeamFound(true);\n      setTeamInfo(res.data.teams[0]);\n    })\n    .catch(err =>{\n      if(teamId === -1){\n        setTeamName(\"Loading...\")\n      }\n\n      // setLoading(false);\n      // setTeamFound(false);\n      setError(true);\n      // console.log(year);\n      // console.log(err.message);\n      // return \"team not found\";\n    })\n\n    return () => cancel()\n  }, [year, teamId, teamInfoUrl])\n\n  // if(loading) return \"loading...\"\n\n  return(\n    <div>\n      <TeamHeader theme={theme} teamName={teamName} teamId={teamId} season={year} teamInfo={teamInfo}/>\n      <Stats division={division} teamInfo={teamInfo} theme={theme} error={error} id={teamId} year={year} teamStatsUrl={\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year}/>\n    </div>\n  );\n\n}\n\nfunction mapRange (value, a, b, c, d) {\n    // first map value from (a..b) to (0..1)\n    value = (value - a) / (b - a);\n    // then map it from (0..1) to (c..d) and return it\n    return c + value * (d - c);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}