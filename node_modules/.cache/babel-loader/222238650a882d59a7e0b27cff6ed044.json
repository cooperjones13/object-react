{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/PostseasonResults.js\";\n//\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=113&group=hitting&season=1999\"\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\nexport default function PostseasonResults({\n  theme,\n  season,\n  teamId\n}) {\n  // console.log(stats);\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const style = {\n    \"backgroundColor\": theme.accentColor,\n    \"color\": \"#ffffff\"\n  };\n  useEffect(() => {\n    let cancel;\n    axios.get(\"https://statsapi.mlb.com/api/v1/schedule/postseason/series?sportId=1&season=\" + season + \"&hydrate=seriesStatus(useOverride=true)\", {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      console.log(res.data);\n\n      for (let i = res.data.series.length - 1; i >= 0; i--) {\n        let seriesStatus = res.data.series[i].games[res.data.series[i].games.length - 1].seriesStatus;\n\n        if (seriesStatus.winningTeam.id === teamId || seriesStatus.losingTeam.id === teamId) {\n          console.log(seriesStatus.description);\n        }\n      }\n    }).catch(err => {\n      console.log(\"yo this is not working\");\n      console.log(err);\n    });\n    return () => cancel();\n  }, [season, teamId]); // console.log(top3);\n\n  return React.createElement(\"div\", {\n    className: \"stat-block\",\n    id: \"postseason-results\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Postseason \", season));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/PostseasonResults.js"],"names":["React","useState","useEffect","StatBlock","axios","PostseasonResults","theme","season","teamId","messages","setMessages","style","accentColor","cancel","get","cancelToken","CancelToken","c","then","res","console","log","data","i","series","length","seriesStatus","games","winningTeam","id","losingTeam","description","catch","err"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,iBAAT,CAA2B;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAA3B,EAAmD;AAChE;AADgE,oBAGhCP,QAAQ,CAAC,EAAD,CAHwB;AAAA;AAAA,QAGzDQ,QAHyD;AAAA,QAG/CC,WAH+C;;AAKhE,QAAMC,KAAK,GAAG;AACZ,uBAAkBL,KAAK,CAACM,WADZ;AAEZ,aAAS;AAFG,GAAd;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,MAAJ;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAU,iFAAgFP,MAAhF,GAAwF,yCAAlG,EAA6I;AAC3IQ,MAAAA,WAAW,EAAE,IAAIX,KAAK,CAACY,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AAD8H,KAA7I,EAGCC,IAHD,CAGMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;;AACA,WAAI,IAAIC,CAAC,GAAGJ,GAAG,CAACG,IAAJ,CAASE,MAAT,CAAgBC,MAAhB,GAAuB,CAAnC,EAAsCF,CAAC,IAAI,CAA3C,EAA8CA,CAAC,EAA/C,EAAkD;AAChD,YAAIG,YAAY,GAAGP,GAAG,CAACG,IAAJ,CAASE,MAAT,CAAgBD,CAAhB,EAAmBI,KAAnB,CAAyBR,GAAG,CAACG,IAAJ,CAASE,MAAT,CAAgBD,CAAhB,EAAmBI,KAAnB,CAAyBF,MAAzB,GAAgC,CAAzD,EAA4DC,YAA/E;;AACE,YAAGA,YAAY,CAACE,WAAb,CAAyBC,EAAzB,KAAgCrB,MAAhC,IAA0CkB,YAAY,CAACI,UAAb,CAAwBD,EAAxB,KAA+BrB,MAA5E,EAAmF;AACjFY,UAAAA,OAAO,CAACC,GAAR,CAAYK,YAAY,CAACK,WAAzB;AACD;AACJ;AACF,KAXD,EAYCC,KAZD,CAYOC,GAAG,IAAG;AACXb,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACD,KAfD;AAgBA,WAAO,MAAMpB,MAAM,EAAnB;AACD,GAnBQ,EAmBN,CAACN,MAAD,EAASC,MAAT,CAnBM,CAAT,CAVgE,CA8BhE;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,oBAA/B;AAAoD,IAAA,KAAK,EAAEG,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBJ,MAAhB,CADJ,CADF;AAKD","sourcesContent":["//\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=113&group=hitting&season=1999\"\n\nimport React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\n\nexport default function PostseasonResults({theme, season, teamId}){\n  // console.log(stats);\n\n  const [messages, setMessages] = useState([]);\n\n  const style = {\n    \"backgroundColor\":theme.accentColor,\n    \"color\": \"#ffffff\"\n  }\n\n  useEffect(() => {\n    let cancel;\n    axios.get(\"https://statsapi.mlb.com/api/v1/schedule/postseason/series?sportId=1&season=\"+ season+ \"&hydrate=seriesStatus(useOverride=true)\", {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      console.log(res.data);\n      for(let i = res.data.series.length-1; i >= 0; i--){\n        let seriesStatus = res.data.series[i].games[res.data.series[i].games.length-1].seriesStatus;\n          if(seriesStatus.winningTeam.id === teamId || seriesStatus.losingTeam.id === teamId){\n            console.log(seriesStatus.description)\n          }\n      }\n    })\n    .catch(err =>{\n      console.log(\"yo this is not working\");\n      console.log(err);\n    })\n    return () => cancel()\n  }, [season, teamId])\n  // console.log(top3);\n\n  return(\n    <div className=\"stat-block\" id=\"postseason-results\" style={style}>\n        <h2>Postseason {season}</h2>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}