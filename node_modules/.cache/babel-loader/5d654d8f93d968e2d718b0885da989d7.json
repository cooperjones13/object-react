{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\nexport default function Stats({\n  id,\n  year\n}) {\n  const _useState = useState(id),\n        _useState2 = _slicedToArray(_useState, 1),\n        teamId = _useState2[0];\n\n  const _useState3 = useState(year),\n        _useState4 = _slicedToArray(_useState3, 1),\n        season = _useState4[0];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        teamInfoUrl = _useState6[0],\n        setTeamInfoUrl = _useState6[1]; // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        stats = _useState8[0],\n        setStats = _useState8[1];\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        record = _useState10[0],\n        setRecord = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n\n  useEffect(() => {\n    setLoading(true);\n    setTeamInfoUrl(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + season);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n\n      for (var i = 0; i < res.data.records.length; i++) {\n        for (var j = 0; j < res.data.records[i].teamRecords.length; j++) {\n          if (res.data.records[i].teamRecords[j].team.id === teamId) {\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    }).catch(err => {\n      setLoading(false); // console.log(err.message);\n\n      return err.message;\n    });\n\n    if (stats === {}) {\n      return \"No Data\";\n    }\n\n    return () => cancel();\n  }, [year, id]);\n  if (loading) return \"Loading Stats\"; // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  if (Object.keys(stats).length !== 0) {\n    return React.createElement(\"div\", {\n      className: \"stats-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"stat-block\",\n      id: \"record\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Season Record\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Win\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Lose\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Win%\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"GB\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Away\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"L10\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"small-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, stats.wins), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, stats.losses), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, stats.winningPercentage), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, stats.leagueGamesBack), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, stats.records.splitRecords[0].wins, \" - \", stats.records.splitRecords[0].losses), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, stats.records.splitRecords[1].wins, \" - \", stats.records.splitRecords[1].losses), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, stats.records.splitRecords[4].wins, \" - \", stats.records.splitRecords[4].losses))))));\n  } else {\n    return \"Error: Team Statistics Not Available\";\n  }\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","StatBlock","axios","Stats","id","year","teamId","season","teamInfoUrl","setTeamInfoUrl","stats","setStats","record","setRecord","loading","setLoading","cancel","get","cancelToken","CancelToken","c","then","res","console","log","data","records","t","i","length","j","teamRecords","team","catch","err","message","Object","keys","wins","losses","winningPercentage","leagueGamesBack","splitRecords"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\n\nexport default function Stats({id, year}){\n  const [teamId] = useState(id);\n  const [season] = useState(year);\n  const [teamInfoUrl, setTeamInfoUrl] = useState(\"\");\n  // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n  const [stats, setStats] = useState({});\n  const [record, setRecord] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    setTeamInfoUrl(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + season)\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n      for(var i = 0; i < res.data.records.length; i++){\n        for(var j = 0; j<res.data.records[i].teamRecords.length; j++){\n          if(res.data.records[i].teamRecords[j].team.id === teamId){\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    })\n    .catch(err =>{\n      setLoading(false);\n      // console.log(err.message);\n      return err.message;\n    })\n\n    if(stats === {}){return \"No Data\";}\n\n    return () => cancel()\n  }, [year, id])\n\n  if(loading) return \"Loading Stats\";\n\n  // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  if(Object.keys(stats).length !== 0) {return(\n    <div className=\"stats-container\">\n\n      <section className=\"stat-block\" id=\"record\">\n        <h2>Season Record</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Win</th><th>Lose</th><th>Win%</th><th>GB</th><th>Home</th><th>Away</th><th>L10</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"small-col\">{stats.wins}</td>\n              <td>{stats.losses}</td>\n              <td>{stats.winningPercentage}</td>\n              <td>{stats.leagueGamesBack}</td>\n              <td>{stats.records.splitRecords[0].wins} - {stats.records.splitRecords[0].losses}</td>\n              <td>{stats.records.splitRecords[1].wins} - {stats.records.splitRecords[1].losses}</td>\n              <td>{stats.records.splitRecords[4].wins} - {stats.records.splitRecords[4].losses}</td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n\n\n\n    </div>\n  );}\n  else{\n    return \"Error: Team Statistics Not Available\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}