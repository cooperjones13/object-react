{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/PostseasonResults.js\";\n//\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=113&group=hitting&season=1999\"\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\nexport default function PostseasonResults({\n  theme,\n  season,\n  teamId,\n  stats\n}) {\n  // console.log(stats);\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n  const style = {\n    \"backgroundColor\": theme.accentColor,\n    \"color\": \"#ffffff\"\n  };\n  useEffect(() => {\n    if (stats.clinchIndicator !== \"-\") {\n      let cancel;\n      axios.get(\"https://statsapi.mlb.com/api/v1/schedule/postseason/series?sportId=1&season=\" + season + \"&hydrate=seriesStatus(useOverride=true)\", {\n        cancelToken: new axios.CancelToken(c => cancel = c)\n      }).then(res => {\n        console.log(res.data);\n        let msg = [];\n\n        for (let i = 1; i < res.data.series.length; i++) {\n          let seriesStatus = res.data.series[i].games[res.data.series[i].games.length - 1].seriesStatus;\n\n          if (seriesStatus.winningTeam.id === teamId) {\n            msg.push(seriesStatus.result);\n          }\n\n          if (seriesStatus.losingTeam.id === teamId) {\n            msg.push(\"Loses \" + seriesStatus.shortName + \" to \" + seriesStatus.result.slice(0, 3));\n          }\n        }\n\n        if (res.data.series[0].games[res.data.series[0].games.length - 1].seriesStatus.winningTeam.id === teamId) {\n          msg.push(res.data.series[0].games[res.data.series[0].games.length - 1].seriesStatus.result);\n        }\n\n        if (res.data.series[0].games[res.data.series[0].games.length - 1].seriesStatus.losingTeam.id === teamId) {\n          msg.push(\"Loses World Series to \" + res.data.series[0].games[res.data.series[0].games.length - 1].seriesStatus.result.slice(0, 3));\n        }\n\n        if (msg.length === 0) {\n          msg.push();\n        }\n\n        setMessages(msg);\n      }).catch(err => {\n        console.log(\"yo this is not working\");\n        console.log(err);\n      });\n      return () => cancel();\n    } else {\n      setMessages([\"Did Not Advance to Postseason\"]);\n    }\n  }, [season, teamId]); // console.log(top3);\n\n  return React.createElement(\"div\", {\n    className: \"stat-block\",\n    id: \"postseason-results\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Postseason \", season), messages.map(msg => React.createElement(\"h3\", {\n    key: msg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, msg)));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/PostseasonResults.js"],"names":["React","useState","useEffect","StatBlock","axios","PostseasonResults","theme","season","teamId","stats","messages","setMessages","style","accentColor","clinchIndicator","cancel","get","cancelToken","CancelToken","c","then","res","console","log","data","msg","i","series","length","seriesStatus","games","winningTeam","id","push","result","losingTeam","shortName","slice","catch","err","map"],"mappings":"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","sourcesContent":["//\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=113&group=hitting&season=1999\"\n\nimport React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\n\nexport default function PostseasonResults({theme, season, teamId, stats}){\n  // console.log(stats);\n\n  const [messages, setMessages] = useState([]);\n\n  const style = {\n    \"backgroundColor\":theme.accentColor,\n    \"color\": \"#ffffff\"\n  }\n\n  useEffect(() => {\n    if(stats.clinchIndicator !== \"-\"){\n        let cancel;\n    axios.get(\"https://statsapi.mlb.com/api/v1/schedule/postseason/series?sportId=1&season=\"+ season+ \"&hydrate=seriesStatus(useOverride=true)\", {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      console.log(res.data);\n      let msg = [];\n      for(let i = 1; i < res.data.series.length; i++){\n        let seriesStatus = res.data.series[i].games[res.data.series[i].games.length-1].seriesStatus;\n          if(seriesStatus.winningTeam.id === teamId){\n            msg.push(seriesStatus.result);\n          }\n          if(seriesStatus.losingTeam.id === teamId){\n            msg.push(\"Loses \" + seriesStatus.shortName + \" to \" + seriesStatus.result.slice(0,3));\n          }\n      }\n      if(res.data.series[0].games[res.data.series[0].games.length-1].seriesStatus.winningTeam.id === teamId){\n        msg.push(res.data.series[0].games[res.data.series[0].games.length-1].seriesStatus.result);\n      }\n      if(res.data.series[0].games[res.data.series[0].games.length-1].seriesStatus.losingTeam.id === teamId){\n        msg.push(\"Loses World Series to \" + res.data.series[0].games[res.data.series[0].games.length-1].seriesStatus.result.slice(0,3));\n      }\n      if (msg.length === 0){msg.push()}\n      setMessages(msg);\n    })\n    .catch(err =>{\n      console.log(\"yo this is not working\");\n      console.log(err);\n    })\n    return () => cancel()\n    }\n    else{\n        setMessages([\"Did Not Advance to Postseason\"])\n    }\n  }, [season, teamId])\n  // console.log(top3);\n\n  return(\n    <div className=\"stat-block\" id=\"postseason-results\" style={style}>\n        <h2>Postseason {season}</h2>\n        {messages.map(msg => (\n            <h3 key={msg}>{msg}</h3>\n        ))\n        }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}