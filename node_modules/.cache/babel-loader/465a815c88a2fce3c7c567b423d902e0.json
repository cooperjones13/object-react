{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport SeasonRecord from './SeasonRecord';\nimport axios from 'axios';\nexport default function Stats({\n  id,\n  year\n}) {\n  const _useState = useState(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year),\n        _useState2 = _slicedToArray(_useState, 2),\n        teamInfoUrl = _useState2[0],\n        setTeamInfoUrl = _useState2[1];\n\n  console.log(id + \" \" + year);\n\n  const _useState3 = useState({\n    \"wins\": \"\",\n    \"losses\": \"\",\n    \"winningPercentage\": \"\",\n    \"leagueGamesBack\": \"\",\n    \"records\": {\n      \"splitRecords\": [{\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }, {\n        \"wins\": \"\",\n        \"losses\": \"\"\n      }]\n    }\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stats = _useState4[0],\n        setStats = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  useEffect(() => {\n    setLoading(true); //setTeamInfoUrl(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year)\n\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false); // console.log(res.data.records);\n\n      var t;\n\n      for (var i = 0; i < res.data.records.length; i++) {\n        for (var j = 0; j < res.data.records[i].teamRecords.length; j++) {\n          if (res.data.records[i].teamRecords[j].team.id === id) {\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    }).catch(err => {\n      setLoading(false); // console.log(err.message);\n\n      return err.message;\n    });\n    return () => cancel();\n  }, [year, id]); // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  return React.createElement(\"div\", {\n    className: \"stats-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(SeasonRecord, {\n    stats: stats,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","StatBlock","SeasonRecord","axios","Stats","id","year","teamInfoUrl","setTeamInfoUrl","console","log","stats","setStats","loading","setLoading","cancel","get","cancelToken","CancelToken","c","then","res","t","i","data","records","length","j","teamRecords","team","catch","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAf,EAA0B;AAAA,oBACDP,QAAQ,CAAC,oFAAoFO,IAArF,CADP;AAAA;AAAA,QAChCC,WADgC;AAAA,QACnBC,cADmB;;AAEvCC,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAE,GAAE,GAAJ,GAAUC,IAAtB;;AAFuC,qBAGbP,QAAQ,CAAC;AACjC,YAAO,EAD0B;AAEjC,cAAS,EAFwB;AAGjC,yBAAoB,EAHa;AAIjC,uBAAkB,EAJe;AAKjC,eAAU;AACR,sBAAe,CAAC;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAD,EAAyB;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAzB,EAAiD;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAjD,EAAyE;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAzE,EAAiG;AAAC,gBAAO,EAAR;AAAW,kBAAS;AAApB,OAAjG;AADP;AALuB,GAAD,CAHK;AAAA;AAAA,QAGhCY,KAHgC;AAAA,QAGzBC,QAHyB;;AAAA,qBAYTb,QAAQ,CAAC,IAAD,CAZC;AAAA;AAAA,QAYhCc,OAZgC;AAAA,QAYvBC,UAZuB;;AAcvCd,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU,CAAC,IAAD,CAAV,CADc,CAEd;;AACA,QAAIC,MAAJ;AACAZ,IAAAA,KAAK,CAACa,GAAN,CAAUT,WAAV,EAAuB;AACrBU,MAAAA,WAAW,EAAE,IAAId,KAAK,CAACe,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AADQ,KAAvB,EAGCC,IAHD,CAGMC,GAAG,IAAI;AACXP,MAAAA,UAAU,CAAC,KAAD,CAAV,CADW,CAEX;;AACA,UAAIQ,CAAJ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBC,MAApC,EAA4CH,CAAC,EAA7C,EAAgD;AAC9C,aAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACN,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBF,CAAjB,EAAoBK,WAApB,CAAgCF,MAAjD,EAAyDC,CAAC,EAA1D,EAA6D;AAC3D,cAAGN,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBF,CAAjB,EAAoBK,WAApB,CAAgCD,CAAhC,EAAmCE,IAAnC,CAAwCxB,EAAxC,KAA+CA,EAAlD,EAAqD;AACnDO,YAAAA,QAAQ,CAACS,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBF,CAAjB,EAAoBK,WAApB,CAAgCD,CAAhC,CAAD,CAAR;AACD;AACF;AACF;AACF,KAdD,EAeCG,KAfD,CAeOC,GAAG,IAAG;AACXjB,MAAAA,UAAU,CAAC,KAAD,CAAV,CADW,CAEX;;AACA,aAAOiB,GAAG,CAACC,OAAX;AACD,KAnBD;AAoBA,WAAO,MAAMjB,MAAM,EAAnB;AACD,GAzBQ,EAyBN,CAACT,IAAD,EAAOD,EAAP,CAzBM,CAAT,CAduC,CAyCvC;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEM,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport SeasonRecord from './SeasonRecord';\nimport axios from 'axios';\n\nexport default function Stats({id, year}){\n  const [teamInfoUrl, setTeamInfoUrl] = useState(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year);\n  console.log(id +\" \" + year);\n  const [stats, setStats] = useState({\n    \"wins\":\"\",\n    \"losses\":\"\",\n    \"winningPercentage\":\"\",\n    \"leagueGamesBack\":\"\",\n    \"records\":{\n      \"splitRecords\":[{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"}]\n    }\n  });\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    //setTeamInfoUrl(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year)\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      setLoading(false);\n      // console.log(res.data.records);\n      var t;\n      for(var i = 0; i < res.data.records.length; i++){\n        for(var j = 0; j<res.data.records[i].teamRecords.length; j++){\n          if(res.data.records[i].teamRecords[j].team.id === id){\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    })\n    .catch(err =>{\n      setLoading(false);\n      // console.log(err.message);\n      return err.message;\n    })\n    return () => cancel()\n  }, [year, id])\n\n  // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  return(\n    <div className=\"stats-container\">\n      <SeasonRecord stats={stats}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}