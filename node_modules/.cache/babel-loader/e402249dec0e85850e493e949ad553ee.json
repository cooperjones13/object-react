{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\nexport default function Stats({\n  id,\n  year\n}) {\n  const _useState = useState(id),\n        _useState2 = _slicedToArray(_useState, 2),\n        teamId = _useState2[0],\n        setId = _useState2[1];\n\n  const _useState3 = useState(year),\n        _useState4 = _slicedToArray(_useState3, 2),\n        season = _useState4[0],\n        setSeason = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        teamInfoUrl = _useState6[0],\n        setTeamInfoUrl = _useState6[1]; // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n\n\n  const _useState7 = useState({\n    \"wins\": \"\",\n    \"losses\": \"\",\n    \"winningPercentage\": \"\",\n    \"leagueGamesBack\": \"\",\n    \"records\": [{\n      \"wins\": \"\",\n      \"losses\": \"\"\n    }, {\n      \"wins\": \"\",\n      \"losses\": \"\"\n    }, {\n      \"wins\": \"\",\n      \"losses\": \"\"\n    }, {\n      \"wins\": \"\",\n      \"losses\": \"\"\n    }, {\n      \"wins\": \"\",\n      \"losses\": \"\"\n    }]\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        stats = _useState8[0],\n        setStats = _useState8[1];\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        record = _useState10[0],\n        setRecord = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n\n  useEffect(() => {\n    setLoading(true);\n    setId(id);\n    setSeason(year);\n    setTeamInfoUrl(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + season);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n\n      for (var i = 0; i < res.data.records.length; i++) {\n        for (var j = 0; j < res.data.records[i].teamRecords.length; j++) {\n          if (res.data.records[i].teamRecords[j].team.id === teamId) {\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    }).catch(err => {\n      setLoading(false); // console.log(err.message);\n\n      return err.message;\n    });\n\n    if (stats === {}) {\n      return \"No Data\";\n    }\n\n    return () => cancel();\n  }, [year, id]);\n  if (loading) return \"Loading Stats\"; // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  return React.createElement(\"div\", {\n    className: \"stats-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"stat-block\",\n    id: \"record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Season Record\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Win\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Lose\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Win%\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"GB\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Home\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Away\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"L10\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    className: \"small-col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, stats.wins), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, stats.losses), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, stats.winningPercentage), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, stats.leagueGamesBack), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, stats.records.splitRecords[0].wins, \" - \", stats.records.splitRecords[0].losses), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, stats.records.splitRecords[1].wins, \" - \", stats.records.splitRecords[1].losses), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, stats.records.splitRecords[4].wins, \" - \", stats.records.splitRecords[4].losses))))));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","StatBlock","axios","Stats","id","year","teamId","setId","season","setSeason","teamInfoUrl","setTeamInfoUrl","stats","setStats","record","setRecord","loading","setLoading","cancel","get","cancelToken","CancelToken","c","then","res","console","log","data","records","t","i","length","j","teamRecords","team","catch","err","message","wins","losses","winningPercentage","leagueGamesBack","splitRecords"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\n\nexport default function Stats({id, year}){\n  const [teamId, setId] = useState(id);\n  const [season, setSeason] = useState(year);\n  const [teamInfoUrl, setTeamInfoUrl] = useState(\"\");\n  // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n  const [stats, setStats] = useState({\n    \"wins\":\"\",\n    \"losses\":\"\",\n    \"winningPercentage\":\"\",\n    \"leagueGamesBack\":\"\",\n    \"records\":[{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"},{\"wins\":\"\",\"losses\":\"\"}]\n  });\n  const [record, setRecord] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    setId(id);\n    setSeason(year);\n    setTeamInfoUrl(\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + season)\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n      for(var i = 0; i < res.data.records.length; i++){\n        for(var j = 0; j<res.data.records[i].teamRecords.length; j++){\n          if(res.data.records[i].teamRecords[j].team.id === teamId){\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    })\n    .catch(err =>{\n      setLoading(false);\n      // console.log(err.message);\n      return err.message;\n    })\n\n    if(stats === {}){return \"No Data\";}\n\n    return () => cancel()\n  }, [year, id])\n\n  if(loading) return \"Loading Stats\";\n\n  // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  return(\n    <div className=\"stats-container\">\n\n      <section className=\"stat-block\" id=\"record\">\n        <h2>Season Record</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Win</th><th>Lose</th><th>Win%</th><th>GB</th><th>Home</th><th>Away</th><th>L10</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"small-col\">{stats.wins}</td>\n              <td>{stats.losses}</td>\n              <td>{stats.winningPercentage}</td>\n              <td>{stats.leagueGamesBack}</td>\n              <td>{stats.records.splitRecords[0].wins} - {stats.records.splitRecords[0].losses}</td>\n              <td>{stats.records.splitRecords[1].wins} - {stats.records.splitRecords[1].losses}</td>\n              <td>{stats.records.splitRecords[4].wins} - {stats.records.splitRecords[4].losses}</td>\n            </tr>\n          </tbody>\n        </table>\n      </section>\n\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}