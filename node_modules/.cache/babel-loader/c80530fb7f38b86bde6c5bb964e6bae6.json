{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App() {\n  const _useState = useState(2019),\n        _useState2 = _slicedToArray(_useState, 2),\n        year = _useState2[0],\n        setYear = _useState2[1];\n\n  const _useState3 = useState(115),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teamId = _useState4[0],\n        setTeamId = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        teamFound = _useState8[0],\n        setTeamFound = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        teamName = _useState10[0],\n        setTeamName = _useState10[1];\n\n  const _useState11 = useState(true),\n        _useState12 = _slicedToArray(_useState11, 2),\n        loading = _useState12[0],\n        setLoading = _useState12[1];\n\n  const _useState13 = useState(\"COL\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        teamFile = _useState14[0],\n        setTimeFile = _useState14[1];\n\n  const _useState15 = useState({\n    \"accentColor\": \"#333366\",\n    \"darkColor\": \"#231F20\",\n    \"lightColor\": \"#C4CED4\"\n  }),\n        _useState16 = _slicedToArray(_useState15, 2),\n        theme = _useState16[0],\n        setTheme = _useState16[1]; // const [teamStats, setTeamStats] = useState({});\n\n\n  const _useState17 = useState('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year),\n        _useState18 = _slicedToArray(_useState17, 2),\n        teamInfoUrl = _useState18[0],\n        setTeamInfoUrl = _useState18[1]; // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  // const teamBackgroundColor = '#33006F';\n  // const teamTextColor = '#C4CED4';\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let cancelYear;\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout: 100\n      }).then(res => {\n        setYear(res.data.year);\n        setTeamId(res.data.id);\n        setTheme(res.data.theme);\n      }).catch(err => {\n        console.log(err.message);\n      });\n      return () => cancelYear();\n    }, 100);\n  }, []);\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout: 2000\n    }).then(res => {\n      setTeamName(res.data.teams[0].name);\n      setTeamFile(res.data.teams[0].fileCode);\n      setLoading(false);\n      setTeamFound(true);\n    }).catch(err => {\n      setLoading(false);\n      setTeamFound(false);\n      setError(true); // console.log(year);\n\n      console.log(err.message); // return \"team not found\";\n    });\n    return () => cancel();\n  }, [year, teamId]); // if(loading) return \"loading...\"\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(TeamHeader, {\n    teamFile: teamFile,\n    theme: theme,\n    teamName: teamName,\n    season: year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Stats, {\n    theme: theme,\n    error: error,\n    id: teamId,\n    year: year,\n    teamInfoUrl: \"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","TeamHeader","Stats","App","year","setYear","teamId","setTeamId","error","setError","teamFound","setTeamFound","teamName","setTeamName","loading","setLoading","teamFile","setTimeFile","theme","setTheme","teamInfoUrl","setTeamInfoUrl","interval","setInterval","cancelYear","get","cancelToken","CancelToken","c","timeout","then","res","data","id","catch","err","console","log","message","cancel","teams","name","setTeamFile","fileCode"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App(){\n  const [year, setYear] = useState(2019);\n  const [teamId, setTeamId] = useState(115);\n  const [error, setError] = useState(false);\n  const [teamFound, setTeamFound] = useState(false);\n  const [teamName, setTeamName] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [teamFile, setTimeFile] = useState(\"COL\");\n  const [theme, setTheme] = useState({\n    \"accentColor\": \"#333366\",\n    \"darkColor\": \"#231F20\",\n    \"lightColor\": \"#C4CED4\"\n  });\n  // const [teamStats, setTeamStats] = useState({});\n  const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  // const teamBackgroundColor = '#33006F';\n  // const teamTextColor = '#C4CED4';\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let cancelYear\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout:100\n      })\n      .then(res => {\n        setYear(res.data.year);\n        setTeamId(res.data.id);\n        setTheme(res.data.theme);\n      })\n      .catch(err =>{\n        console.log(err.message);\n      });\n      return () => cancelYear()\n    }, 100);\n  },[])\n\n  useEffect(() => {\n    setError(false);\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n    let cancel\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout:2000\n    })\n    .then(res => {\n      setTeamName(res.data.teams[0].name);\n      setTeamFile(res.data.teams[0].fileCode);\n      setLoading(false);\n      setTeamFound(true);\n    })\n    .catch(err =>{\n      setLoading(false);\n      setTeamFound(false);\n      setError(true);\n      // console.log(year);\n      console.log(err.message);\n      // return \"team not found\";\n    })\n\n    return () => cancel()\n  }, [year, teamId])\n\n  // if(loading) return \"loading...\"\n\n  return(\n    <div>\n      <TeamHeader teamFile={teamFile} theme={theme} teamName={teamName} season={year}/>\n      <Stats theme={theme} error={error} id={teamId} year={year} teamInfoUrl={\"http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=\" + year}/>\n    </div>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}