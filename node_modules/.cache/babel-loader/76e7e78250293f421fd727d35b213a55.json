{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function Stats({\n  teamId,\n  season\n}) {\n  const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season;\n  const teamBackgroundColor = 'white';\n  const teamTextColor = '#33006F';\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        stats = _useState2[0],\n        setStats = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n\n      const team = () => {\n        var t;\n\n        for (var i; i < res.data.results.length; i++) {\n          for (var j; j < res.data.results[i].teamRecords.length; j++) {\n            if (res.data.results[i].teamRecords[j].id === teamId) {\n              t = res.data.results[i].teamRecords[j];\n            }\n          }\n        }\n\n        console.log(t.team.id + \": \" + t.team.name);\n        return t;\n      };\n    });\n    return () => cancel();\n  }, [season, teamId]);\n  if (loading) return \"Loading...\";\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","axios","Stats","teamId","season","teamInfoUrl","teamBackgroundColor","teamTextColor","stats","setStats","loading","setLoading","cancel","get","cancelToken","CancelToken","c","then","res","team","t","i","data","results","length","j","teamRecords","id","console","log","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAf,EAAgC;AAC7C,QAAMC,WAAW,GAAG,oFAAoFD,MAAxG;AACA,QAAME,mBAAmB,GAAG,OAA5B;AACA,QAAMC,aAAa,GAAG,SAAtB;;AAH6C,oBAInBR,QAAQ,CAAC,EAAD,CAJW;AAAA;AAAA,QAItCS,KAJsC;AAAA,QAI/BC,QAJ+B;;AAAA,qBAKfV,QAAQ,CAAC,IAAD,CALO;AAAA;AAAA,QAKtCW,OALsC;AAAA,QAK7BC,UAL6B;;AAO7CX,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIC,MAAJ;AACAX,IAAAA,KAAK,CAACY,GAAN,CAAUR,WAAV,EAAuB;AACrBS,MAAAA,WAAW,EAAE,IAAIb,KAAK,CAACc,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AADQ,KAAvB,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACbP,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,YAAMQ,IAAI,GAAG,MAAM;AACjB,YAAIC,CAAJ;;AACA,aAAI,IAAIC,CAAR,EAAWA,CAAC,GAAGH,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiBC,MAAhC,EAAwCH,CAAC,EAAzC,EAA4C;AAC1C,eAAI,IAAII,CAAR,EAAWA,CAAC,GAACP,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiBF,CAAjB,EAAoBK,WAApB,CAAgCF,MAA7C,EAAqDC,CAAC,EAAtD,EAAyD;AACvD,gBAAGP,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiBF,CAAjB,EAAoBK,WAApB,CAAgCD,CAAhC,EAAmCE,EAAnC,KAA0CxB,MAA7C,EAAoD;AAClDiB,cAAAA,CAAC,GAAGF,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiBF,CAAjB,EAAoBK,WAApB,CAAgCD,CAAhC,CAAJ;AACD;AACF;AACF;;AACDG,QAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACD,IAAF,CAAOQ,EAAP,GAAY,IAAZ,GAAmBP,CAAC,CAACD,IAAF,CAAOW,IAAtC;AACA,eAAOV,CAAP;AACD,OAXD;AAYD,KAhBD;AAkBA,WAAO,MAAMR,MAAM,EAAnB;AACD,GAtBQ,EAsBN,CAACR,MAAD,EAASD,MAAT,CAtBM,CAAT;AAwBA,MAAGO,OAAH,EAAY,OAAO,YAAP;AACZ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nexport default function Stats({teamId, season}){\n  const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season;\n  const teamBackgroundColor = 'white';\n  const teamTextColor = '#33006F';\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      const team = () => {\n        var t;\n        for(var i; i < res.data.results.length; i++){\n          for(var j; j<res.data.results[i].teamRecords.length; j++){\n            if(res.data.results[i].teamRecords[j].id === teamId){\n              t = res.data.results[i].teamRecords[j];\n            }\n          }\n        }\n        console.log(t.team.id + \": \" + t.team.name);\n        return t\n      }\n    })\n\n    return () => cancel()\n  }, [season, teamId])\n\n  if(loading) return \"Loading...\";\n  return(\n    <div>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}