{"ast":null,"code":"const DelimiterParser = require('@serialport/parser-delimiter');\n/**\n *  A transform stream that emits data after a newline delimiter is received.\n * @summary To use the `Readline` parser, provide a delimiter (defaults to `\\n`). Data is emitted as string controllable by the `encoding` option (defaults to `utf8`).\n * @extends DelimiterParser\n * @example\nconst SerialPort = require('serialport')\nconst Readline = require('@serialport/parser-readline')\nconst port = new SerialPort('/dev/tty-usbserial1')\nconst parser = port.pipe(new Readline({ delimiter: '\\r\\n' }))\nparser.on('data', console.log)\n*/\n\n\nclass ReadLineParser extends DelimiterParser {\n  constructor(options) {\n    const opts = {\n      delimiter: Buffer.from('\\n', 'utf8'),\n      encoding: 'utf8',\n      ...options\n    };\n\n    if (typeof opts.delimiter === 'string') {\n      opts.delimiter = Buffer.from(opts.delimiter, opts.encoding);\n    }\n\n    super(opts);\n  }\n\n}\n\nmodule.exports = ReadLineParser;","map":null,"metadata":{},"sourceType":"script"}