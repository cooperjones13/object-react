{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/TopPlayers.js\";\n//\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=113&group=hitting&season=1999\"\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function TopPlayers({\n  theme,\n  season,\n  teamId,\n  group,\n  title\n}) {\n  // console.log(stats);\n  const _useState = useState([{\n    \"name\": \"-\",\n    \"stat\": \"-\"\n  }, {\n    \"name\": \"-\",\n    \"stat\": \"-\"\n  }, {\n    \"name\": \"-\",\n    \"stat\": \"-\"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        top3 = _useState2[0],\n        setTop3 = _useState2[1];\n\n  const style = {\n    \"backgroundColor\": theme.accentColor,\n    \"color\": \"#ffffff\"\n  };\n  const mainStat = {\n    \"hitting\": [\"avg\", \"AVG\"],\n    \"pitching\": [\"era\", \"ERA\"],\n    \"fielding\": [\"fielding\", \"FPCT\"]\n  };\n  useEffect(() => {\n    let cancel;\n    axios.get(\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=\" + teamId + \"&group=\" + group + \"&season=\" + season, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      // console.log(res.data.stats[0].splits[0].player);\n      if (group !== \"pitching\") {\n        setTop3([{\n          \"name\": res.data.stats[0].splits[0].player.fullName,\n          \"stat\": res.data.stats[0].splits[0].stat[mainStat[group][0]]\n        }, {\n          \"name\": res.data.stats[0].splits[1].player.fullName,\n          \"stat\": res.data.stats[0].splits[1].stat[mainStat[group][0]]\n        }, {\n          \"name\": res.data.stats[0].splits[2].player.fullName,\n          \"stat\": res.data.stats[0].splits[2].stat[mainStat[group][0]]\n        }]);\n      } else {\n        setTop3([{\n          \"name\": res.data.stats[0].splits[0].player.fullName,\n          \"stat\": res.data.stats[0].splits[0].stat[mainStat[group][0]]\n        }]);\n      }\n\n      console.log(group + \" is working\");\n    }).catch(err => {\n      console.log(group + \" is not working\");\n    });\n    return () => cancel(); // console.log(top3);\n  }, []); // console.log(top3);\n\n  return React.createElement(\"div\", {\n    className: \"stat-list\",\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"top-player-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, title)), React.createElement(\"ol\", {\n    className: \"top-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, top3.map(player => React.createElement(\"li\", {\n    key: player.stat + player.name + title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"player-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, player.name), React.createElement(\"h3\", {\n    className: \"player-stat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, player.stat))))));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/TopPlayers.js"],"names":["React","useState","useEffect","axios","TopPlayers","theme","season","teamId","group","title","top3","setTop3","style","accentColor","mainStat","cancel","get","cancelToken","CancelToken","c","then","res","data","stats","splits","player","fullName","stat","console","log","catch","err","map","name"],"mappings":"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","sourcesContent":["//\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=113&group=hitting&season=1999\"\n\nimport React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nexport default function TopPlayers({theme, season, teamId, group, title}){\n  // console.log(stats);\n  const [top3, setTop3] = useState([{\"name\":\"-\",\"stat\":\"-\"}, {\"name\":\"-\",\"stat\":\"-\"}, {\"name\":\"-\",\"stat\":\"-\"}]);\n  const style = {\n    \"backgroundColor\":theme.accentColor,\n    \"color\": \"#ffffff\"\n  }\n  const mainStat = {\n    \"hitting\":[\"avg\",\"AVG\"],\n    \"pitching\":[\"era\",\"ERA\"],\n    \"fielding\":[\"fielding\",\"FPCT\"]\n  };\n\n  useEffect(() => {\n    let cancel;\n    axios.get(\"http://statsapi.mlb.com/api/v1/stats?stats=season&teamId=\"+ teamId +\"&group=\"+ group +\"&season=\"+ season, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      // console.log(res.data.stats[0].splits[0].player);\n      if(group !== \"pitching\"){\n        setTop3([\n          {\n          \"name\":res.data.stats[0].splits[0].player.fullName,\n          \"stat\":res.data.stats[0].splits[0].stat[mainStat[group][0]]\n          },\n          {\n          \"name\":res.data.stats[0].splits[1].player.fullName,\n          \"stat\":res.data.stats[0].splits[1].stat[mainStat[group][0]]\n          },\n          {\n          \"name\":res.data.stats[0].splits[2].player.fullName,\n          \"stat\":res.data.stats[0].splits[2].stat[mainStat[group][0]]\n          }\n        ]);\n      } else{\n        setTop3([\n          {\n          \"name\":res.data.stats[0].splits[0].player.fullName,\n          \"stat\":res.data.stats[0].splits[0].stat[mainStat[group][0]]\n          }\n        ]);\n      }\n      console.log(group + \" is working\");\n    })\n    .catch(err =>{\n      console.log(group + \" is not working\");\n    })\n    return () => cancel()\n    // console.log(top3);\n  }, [])\n  // console.log(top3);\n\n  return(\n    <div className=\"stat-list\" style={style}>\n      <div className=\"top-player-container\">\n        <h2>{title}</h2>\n      </ div>\n      <ol className=\"top-3\">\n        {top3.map(player => (\n        <li key={player.stat+player.name+title}> \n          <div className=\"player-row\">\n            {/* {console.log(player.stat+player.name)} */}\n            <h3 className=\"player-name\">{player.name}</h3> \n            <h3 className=\"player-stat\">{player.stat}</h3> \n          </div>\n        </li>))\n        }\n      </ol>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}