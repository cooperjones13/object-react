{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App({\n  year\n}) {\n  // const [teamId, setTeamId] = useState(114);\n  const teamId = 114;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        teamFound = _useState2[0],\n        setTeamFound = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        teamName = _useState4[0],\n        setTeamName = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1]; // const [teamStats, setTeamStats] = useState({});\n\n\n  const _useState7 = useState('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year),\n        _useState8 = _slicedToArray(_useState7, 2),\n        teamInfoUrl = _useState8[0],\n        setTeamInfoUrl = _useState8[1]; // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n\n\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n  useEffect(() => {\n    this.interval = setInterval(() => {\n      let cancelYear;\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout: 2000\n      }).then(res => {\n        const y = res.data.express;\n        this.setState({\n          year: y\n        });\n      }).catch(err => {\n        console.log(err.message);\n      });\n      console.log(this.state.year);\n      return () => cancelYear();\n    }, 1000);\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId=' + teamId + '&season=' + year);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout: 2000\n    }).then(res => {\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n      setTeamFound(true);\n    }).catch(err => {\n      setLoading(false);\n      setTeamFound(false);\n      console.log(year);\n      console.log(err.message);\n    });\n    return () => cancel();\n  }, [year, teamId]);\n  if (loading) return \"Loading...\";\n\n  if (teamFound) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(TeamHeader, {\n      teamName: teamName,\n      season: year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Stats, {\n      teamId: teamId,\n      season: year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"team-not-found\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"PASTIME\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" place a baseball on the sensor and use the slider to explore the history of america's pastime\"));\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/App.js"],"names":["React","useState","useEffect","axios","TeamHeader","Stats","App","year","teamId","teamFound","setTeamFound","teamName","setTeamName","loading","setLoading","teamInfoUrl","setTeamInfoUrl","teamBackgroundColor","teamTextColor","interval","setInterval","cancelYear","get","cancelToken","CancelToken","c","timeout","then","res","y","data","express","setState","catch","err","console","log","message","state","cancel","teams","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport TeamHeader from './TeamHeader';\nimport Stats from './Stats';\n\nfunction App({year}){\n  // const [teamId, setTeamId] = useState(114);\n  const teamId = 114;\n  const [teamFound, setTeamFound] = useState(false);\n  const [teamName, setTeamName] = useState();\n  const [loading, setLoading] = useState(true);\n  // const [teamStats, setTeamStats] = useState({});\n  const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const [teamInfoUrl, setTeamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n  // const teamInfoUrl = 'http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year;\n  const teamBackgroundColor = '#33006F';\n  const teamTextColor = '#C4CED4';\n\n  useEffect(() => {\n    this.interval = setInterval(() => {\n      let cancelYear\n      axios.get(\"http://localhost:5000/api/data\", {\n        cancelToken: new axios.CancelToken(c => cancelYear = c),\n        timeout:2000\n      })\n      .then(res => {\n        const y = res.data.express\n        this.setState({\n          year: y\n        });\n      })\n      .catch(err =>{\n        console.log(err.message);\n      });\n      console.log(this.state.year);\n      return () => cancelYear()\n    }, 1000);\n  },[])\n\n  useEffect(() => {\n    setLoading(true);\n    setTeamFound(false);\n    setTeamInfoUrl('http://statsapi.mlb.com/api/v1/teams?teamId='+ teamId +'&season='+ year);\n    let cancel\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c),\n      timeout:2000\n    })\n    .then(res => {\n      setTeamName(res.data.teams[0].name);\n      setLoading(false);\n      setTeamFound(true);\n    })\n    .catch(err =>{\n      setLoading(false);\n      setTeamFound(false);\n      console.log(year);\n      console.log(err.message);\n    })\n\n    return () => cancel()\n  }, [year, teamId])\n\n  if(loading) return \"Loading...\";\n  if(teamFound){\n    return(\n      <div>\n        <TeamHeader teamName={teamName} season={year}/>\n        <Stats teamId={teamId} season={year}/>\n      </div>\n    );\n  } else{\n    return(\n      <div className=\"team-not-found\">\n        <h1>PASTIME</h1>\n        <p> place a baseball on the sensor and use the slider to explore the history of america's pastime</p>\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}