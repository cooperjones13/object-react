{"ast":null,"code":"import _slicedToArray from \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js\";\nimport React, { useState, useEffect } from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\nexport default function Stats({\n  teamId,\n  season\n}) {\n  const _useState = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season),\n        _useState2 = _slicedToArray(_useState, 1),\n        teamInfoUrl = _useState2[0]; // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stats = _useState4[0],\n        setStats = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n\n      for (var i = 0; i < res.data.records.length; i++) {\n        for (var j = 0; j < res.data.records[i].teamRecords.length; j++) {\n          if (res.data.records[i].teamRecords[j].team.id === teamId) {\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    }).catch(err => {\n      setLoading(false);\n      console.log(err.message);\n      return null;\n    });\n\n    if (stats === {}) {\n      return \"No Data\";\n    }\n\n    return () => cancel();\n  }, [season, teamId]);\n  if (loading) return \"Loading...\"; // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  return React.createElement(\"div\", {\n    className: \"stats-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    class: \"stat-box\",\n    id: \"record\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Record\")));\n}","map":{"version":3,"sources":["/Users/cooperjones/Documents/_Object/mlb-final-project-react/src/Stats.js"],"names":["React","useState","useEffect","StatBlock","axios","Stats","teamId","season","teamInfoUrl","stats","setStats","loading","setLoading","cancel","get","cancelToken","CancelToken","c","then","res","console","log","data","records","t","i","length","j","teamRecords","team","id","catch","err","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAf,EAAgC;AAAA,oBACvBN,QAAQ,CAAC,oFAAoFM,MAArF,CADe;AAAA;AAAA,QACtCC,WADsC,kBAE7C;AACA;;;AAH6C,qBAInBP,QAAQ,CAAC,EAAD,CAJW;AAAA;AAAA,QAItCQ,KAJsC;AAAA,QAI/BC,QAJ+B;;AAAA,qBAKfT,QAAQ,CAAC,IAAD,CALO;AAAA;AAAA,QAKtCU,OALsC;AAAA,QAK7BC,UAL6B;;AAO7CV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIC,MAAJ;AACAT,IAAAA,KAAK,CAACU,GAAN,CAAUN,WAAV,EAAuB;AACrBO,MAAAA,WAAW,EAAE,IAAIX,KAAK,CAACY,WAAV,CAAsBC,CAAC,IAAIJ,MAAM,GAAGI,CAApC;AADQ,KAAvB,EAGCC,IAHD,CAGMC,GAAG,IAAI;AACXP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,OAArB;AACA,UAAIC,CAAJ;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBG,MAApC,EAA4CD,CAAC,EAA7C,EAAgD;AAC9C,aAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACR,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCF,MAAjD,EAAyDC,CAAC,EAA1D,EAA6D;AAC3D,cAAGR,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,EAAmCE,IAAnC,CAAwCC,EAAxC,KAA+CxB,MAAlD,EAAyD;AACvDI,YAAAA,QAAQ,CAACS,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBE,CAAjB,EAAoBG,WAApB,CAAgCD,CAAhC,CAAD,CAAR;AACD;AACF;AACF;AACF,KAdD,EAeCI,KAfD,CAeOC,GAAG,IAAG;AACXpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,OAAhB;AACA,aAAO,IAAP;AACD,KAnBD;;AAqBA,QAAGxB,KAAK,KAAK,EAAb,EAAgB;AAAC,aAAO,SAAP;AAAkB;;AAEnC,WAAO,MAAMI,MAAM,EAAnB;AACD,GA3BQ,EA2BN,CAACN,MAAD,EAASD,MAAT,CA3BM,CAAT;AA6BA,MAAGK,OAAH,EAAY,OAAO,YAAP,CApCiC,CAsC7C;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,KAAK,EAAC,UAAf;AAA0B,IAAA,EAAE,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CADF;AAQD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport StatBlock from './StatBlock';\nimport axios from 'axios';\n\nexport default function Stats({teamId, season}){\n  const [teamInfoUrl] = useState('http://statsapi.mlb.com/api/v1/standings/regularSeason?leagueId=103,104&season=' + season);\n  // const teamBackgroundColor = 'white';\n  // const teamTextColor = '#33006F';\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    let cancel;\n    axios.get(teamInfoUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    })\n    .then(res => {\n      setLoading(false);\n      console.log(res.data.records);\n      var t;\n      for(var i = 0; i < res.data.records.length; i++){\n        for(var j = 0; j<res.data.records[i].teamRecords.length; j++){\n          if(res.data.records[i].teamRecords[j].team.id === teamId){\n            setStats(res.data.records[i].teamRecords[j]);\n          }\n        }\n      }\n    })\n    .catch(err =>{\n      setLoading(false);\n      console.log(err.message);\n      return null;\n    })\n\n    if(stats === {}){return \"No Data\";}\n\n    return () => cancel()\n  }, [season, teamId])\n\n  if(loading) return \"Loading...\";\n\n  // const stats_being_displayed = [{'display': 'Games Played', 'key': 'gamesPlayed'}, {'display': 'Wins', 'key': 'wins'}, {'display': 'Losses', 'key': 'losses'}, {'display': 'Win %', 'key': 'winningPercentage'}, {'display': 'Runs Allowed', 'key': 'runsAllowed'}, {'display': 'Runs Scored', 'key': 'runsScored'}, {'display': 'Division Rank', 'key': 'divisionRank'}, {'display': 'League Rank', 'key': 'leagueRank'}, {'display': 'Sport Rank', 'key': 'sportRank'}]\n\n  return(\n    <div className=\"stats-container\">\n      <section class=\"stat-box\" id=\"record\">\n        <h2>Record</h2>\n\n      </section>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}